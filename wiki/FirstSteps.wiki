Each page is saprated to at least 2 parts, and we'll talk about them in this guide.
- Action - The functional code, basically the "engine" of the page.
- View - The graphical part, or: What the user sees.
The missing part is the module (or model) part, and you might read about it in the [ModuleExamples] wiki page.

==Controllers==
The actions ordered by controllers, which are, basically, "page categories". For example, the pages: "Login", "Profile" and "Logout" will be placed in the User Controller, and the pages: "Topiclist", "Topic" and "Reply", will be placed in the ForumController". (For example)

Basic controller should look much like:

===/Application/Controllers/user.controller.inc===
{{{
<?php 
class userController extends Controller {

	/**
	 * The login page
	 */
	public function loginAction() {
		// Code here
	}
	
	/**
	 * The profile page
	 */
	public function profileAction() {
		// Code here
	}
	
	/**
	 * The logout script
	 */
	public function logoutAction() {
		// Code here
	}
	

}

?>
}}}

*The controller and action names, are important. 
Controller name should be: "x.controller.inc", and action name should be: "xAction". *

*Also, the name of the controller class is important. It should be "xController". (x = the given name)*

*Please try to keep all the names in one format. I suggest lower case letters.*

*One more thing about controllers, is that they must be placed in /Application/Controllers/.*

==Views==
After you wrote the action code, you sometimes want to show the user the results.
So, views will be placed in /Application/Views/. The name format is "action.controller.inc" (action = the action name, controller = the controller name).

To pass variables between actions and views, you use the variable $this->_view in the action part.
For example, if I want to pass information about the uesr in the profile action, I'll do something like that:
(Notice the profileAction)
{{{
<?php 
class userController extends Controller {

	/**
	 * The login page
	 */
	public function loginAction() {
		// Code here
	}
	
	/**
	 * The profile page
	 */
	public function profileAction() {
		$user_information = array(
			'username' => 'Mr.bluz',
			'first_name' => 'Eliran',
			'age' => '18',
		);
		
		$this->_view->user_information = $user_information;
	}
	
	/**
	 * The logout script
	 */
	public function logoutAction() {
		// Code here
	}
	

}

?>
}}}

So, after we passed the information from the action, we would like to call it from the view, and print it on the screen.
For that, we'll use the variable $view, in the view part.

Example:
===/Application/Views/profile.uesr.inc===
{{{
<h1><?php $view->user_information['username']?>'s Profile</h1>
<strong>Name:</strong> <?php $view->user_information['first_name'];?>.<br />
<strong>Agee:</strong> <?php $view->user_information['age'];?>.
}}}

This will print:
<h1>Mr.bluz's Profile</h1>
<strong>Name:</strong> Eliran.<br />
<strong>Agee:</strong> 18.